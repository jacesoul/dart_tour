# dart가 좋은 첫번째 이유
- JIT → just-in-time
    - dart VM을 사용하는데 내가 쓴 코드의 결과를 바로 화면에 보여준다.
- AOT → ahead-of-time
    - 컴파일을 먼저하고, 그 결과인 바이너리를 배포한다. 그건 CPU가 이해할 수 있는 기계어와 같은것들이다.
    - IOS, Android, Windows, Mac 등을 위해 컴파일 한다는건 시간이 오래 걸린다. 왜냐면 컴파일러는 아주 많은 최적화를 해야하고 나의 코드를 기계어로 바꿔야하는 등 하는 일이 많다.

- 개발 도중에는 내가 쓴 코드를 dart 가상 머신에서 실행시킨다. dart 가상 머신은 그 코드를 just-in-time으로 컴파일해주고 이건 가상 머신에서 코드가 돌아가고 있다는 거니까 조금 느리게 돌아가겠지만 이부분은 개발중에 내가 한 걸 화면에 바로 피드백을 받고 싶기 때문에 괜찮다.
- 하지만 코딩을 다 했다면 배포시에 dart에게 우리 코드를 ahead-of-tim으로 컴파일해달라고 부탁한다. 이건 우리가 쓴 코드가 실제 기계어로 변환될 거라는 말이고 우리 앱을 더 빠르게 만들어준다.
- 이러한 특징은 많은 프로그래밍 언어가 가진건 아니다.
- 모바일 개발에는 아주 중요하고 또 멋진 특징이다.
- 이건 dart가 개발하기에 또는 배포하기에 특별하고 좋은 언어인 이유이다.

# dart가 좋은 두번째 이유
- null safety는 안전한 프로그램을 빌드할 때 아주 중요하다.
- dart는 Null safetyf를 도입했고 그게 프로그램을 더 안전하게 만들어 준다.

### INSTALL DART
- brew tap dart-lang/dart
- brew install dart

### VARIABLES
- main 함수는 모든 Dart 프로그램의 Entry point이기 때문에 아주 중요하다. 
- 모든 코드는 main 함수 안에 들어가야 한다. 
- 끝에 세미콜론(;)을 꼭 넣어줘야한다. 
- 관습적으로 함수나 메소드 내부에 지역 변수를 선언할 때에는 var를 사용한다.  
- class에서 변수나 property를 선언할 때에는 타입을 지정해준다. 
- var를 쓰던 String을 쓰던 어떤 경우든 변수는 업데이트 할 수 있다. 
- dynamic은 여러가지 타입을 가질수 있는 변수에 쓰는 키워드이다. 
- dynamic은 정말로 필요할 때만 써야한다.
- null safety는 개발자가 null 값을 참조 할수 없도록 하는것이다. 
- 기본적으로 모든 변수는 non-nullable이다. 